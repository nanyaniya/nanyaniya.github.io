<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://nanyaniya.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Jul 2022 17:52:06 +0800</lastBuildDate><atom:link href="https://nanyaniya.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Message3|Principal Components Analysis|主成分分析</title>
      <link>https://nanyaniya.github.io/post/passage3/</link>
      <pubDate>Sat, 16 Jul 2022 17:52:06 +0800</pubDate>
      
      <guid>https://nanyaniya.github.io/post/passage3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Passage2|数字图像识别|Digit Recognition</title>
      <link>https://nanyaniya.github.io/post/passage2/</link>
      <pubDate>Sat, 16 Jul 2022 11:22:43 +0800</pubDate>
      
      <guid>https://nanyaniya.github.io/post/passage2/</guid>
      <description>!!!!!ppt的内容还没加上来
will use:	MNIST dataset:	http://yann.lecun.com/exdb/mnist/
​	sklearn :	https://scikit-learn.org/stable/
​	k-Nearest Neighbours classifiers:	https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html
​	RandomForest classifiers:	https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html
​	Naïve Bayes classifiers:	https://scikit-learn.org/stable/modules/naive_bayes.html
MNIST The MNIST database (Modified National Institute of Standards and Technology database) is a large database of handwritten digits that is commonly used for training various image processing systems.
获取数据集：sklearn.datasets.fetch_openml
sklearn.datasets.fetch_openml(name: Optional[str] = None, *, version: Union[str, int] = &amp;#39;active&amp;#39;, data_id: Optional[int] = None, data_home: Optional[str] = None, target_column: Optional[Union[str, List]] = &amp;#39;default-target&amp;#39;, cache: bool = True, return_X_y: bool = False, as_frame: Union[str, bool] = &amp;#39;auto&amp;#39;, n_retries: int = 3, delay: float = 1.</description>
    </item>
    
    <item>
      <title>Passage1|totorial2|图像处理基础</title>
      <link>https://nanyaniya.github.io/post/passage1/</link>
      <pubDate>Fri, 15 Jul 2022 18:46:49 +0800</pubDate>
      
      <guid>https://nanyaniya.github.io/post/passage1/</guid>
      <description>image processing basics tools or libs:
​	openCV	：OpenCV： OpenCV-Python Tutorials
​	Numpy:	https://docs.opencv.org/4.5.2/d6/d00/tutorial_py_root.html
​	pillow:	https://docs.scipy.org/doc/scipy/reference/
​	spicy:	https://numpy.org/doc/1.21
​	matplotlib:	https://matplotlib.org/stable/contents.html
Q1:	convolution #import numpy as np #==========一维卷积================= # A=np.array([2,-1]) # B=np.array([-1,2,1]) #可以将列表转化为数组，也可以不转 A=[2,1,1,-1] B=[1,0,0.25] #scipy.signal.convolve（in1， in2， mode=&amp;#39;full&amp;#39;， method=&amp;#39;auto&amp;#39;) C=signal.convolve(A,B, mode=&amp;#39;full&amp;#39;,method=&amp;#39;auto&amp;#39;) print(C) #==========二维卷积================= A1=[[1,3,2,-1],[2,0,3,4],[-1,2,4,1],[5,-2,0,1]] B1=[[0,1],[2,-1]] # C1=signal.convolve(A1,B1, mode=&amp;#39;full&amp;#39;,method=&amp;#39;auto&amp;#39;) C1=signal.convolve(A1,B1) print(C1) Q2&amp;amp;Q4:image reading&amp;amp;writing ；color space convertion|openCV color space ​	opencv 中顺序是BGR
​	HSV 表达彩色图像的方式由三个部分组成：
Hue（色调、色相） Saturation（饱和度、色彩纯净度） Value（明度） histogram some terminologies related with histograms:</description>
    </item>
    
    <item>
      <title>TrafficSign_notes</title>
      <link>https://nanyaniya.github.io/post/trafficsign_notes/</link>
      <pubDate>Thu, 14 Jul 2022 23:37:13 +0800</pubDate>
      
      <guid>https://nanyaniya.github.io/post/trafficsign_notes/</guid>
      <description>level1:
This dataset consists of 5998 images belonging to 58 classes.
Each image is named “XXX_yyyy.png”. Here XXX represent the class (traffic sign type) and yyyy represents the image number within each class.
token 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</description>
    </item>
    
    <item>
      <title>Passage0|创建博客|Build a blog based on Hugo&amp;Github</title>
      <link>https://nanyaniya.github.io/post/passage0/</link>
      <pubDate>Thu, 14 Jul 2022 18:09:36 +0800</pubDate>
      
      <guid>https://nanyaniya.github.io/post/passage0/</guid>
      <description>Welcome here！
本文用了git和hugo两个工具来搭建GitHub博客，不需要用到额外的域名（custom domain），简洁易上手！
===============【start here】==================
1.准备git和hugo工具 hugo 下载地址：gohugo.io
git 官网下载即可
2.安装git 3.安装hugo 3.1）创建hugo文件夹
3.2）在上一步的hugo下创建bin和sites文件夹
3.3）hugo的zip解压到bin
4.配置path环境变量 windows搜索envi，然后按照下图配置：
选择新建，输入hugo地址：
点击确定
5.hugo建立站点 5.0 ）检验hugo环境配置是否生效
win+R，打开cmd，输入：
hugo version ![image-20220714220033195](C:\Users\Yan xinr\AppData\Roaming\Typora\typora-user-images\image-20220714220033195.png)
出现如下版本号表示成功！
5.1）创建新site
还是在命令行下：（先进入C/D/F等盘）
cd hugo/sites hugo new site myblog #创建名为myblog的新站点 可以看见：
6.创建一篇文章 6.0）一定要先进入在第五步创立的站点文件中（我的是myblog）操作如下：
命令行输入：cd myblog
6.1）站点文件中创建文章
cmd输入：
hugo new post\passage0.md #创建名为passage0的文章 可以看见:
![image-20220714220843737](C:\Users\Yan xinr\AppData\Roaming\Typora\typora-user-images\image-20220714220843737.png)
文章点开如下：【我用的是typora编辑器】
![image-20220714221039992](C:\Users\Yan xinr\AppData\Roaming\Typora\typora-user-images\image-20220714221039992.png)
7.hugo 下载theme 进入hugo官网，选择最上面一行的theme栏，选择一款你喜欢的主题
​	如：m10c【地址如下https://themes.gohugo.io/themes/hugo-theme-m10c/】
进入之后往下翻，installation下说了如何安装,如图
![image-20220714221528782](C:\Users\Yan xinr\AppData\Roaming\Typora\typora-user-images\image-20220714221528782.png)
所以，我们只需要在cmd里输入如下代码：【代码格式为： git clone [url addr] [存放目录] 】</description>
    </item>
    
  </channel>
</rss>
